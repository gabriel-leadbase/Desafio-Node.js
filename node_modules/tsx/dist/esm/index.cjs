"use strict";var T=require("worker_threads"),R=require("../node-features-fa497138.cjs"),F=require("module"),v=require("../source-map.cjs"),h=require("path"),g=require("url"),E=require("../index-bb73d2cd.cjs"),O=require("../resolve-ts-path-3fca13b7.cjs"),p=require("get-tsconfig"),k=require("fs");require("esbuild"),require("crypto"),require("os");var d=typeof document<"u"?document.currentScript:null;const b=()=>{const{port1:e,port2:t}=new T.MessageChannel;v.installSourceMapSupport(),process.send&&e.addListener("message",r=>{r.type==="dependency"&&process.send(r)}),e.unref(),F.register("./index.mjs",{parentURL:typeof document>"u"?require("url").pathToFileURL(__filename).href:d&&d.src||new URL("esm/index.cjs",document.baseURI).href,data:{port:t},transferList:[t]})},f=new Map;async function x(e){if(f.has(e))return f.get(e);if(!await k.promises.access(e).then(()=>!0,()=>!1)){f.set(e,void 0);return}const r=await k.promises.readFile(e,"utf8");try{const o=JSON.parse(r);return f.set(e,o),o}catch{throw new Error(`Error parsing: ${e}`)}}async function N(e){let t=new URL("package.json",e);for(;!t.pathname.endsWith("/node_modules/package.json");){const r=g.fileURLToPath(t),o=await x(r);if(o)return o;const n=t;if(t=new URL("../package.json",t),t.pathname===n.pathname)break}}async function A(e){var t;const r=await N(e);return(t=r==null?void 0:r.type)!=null?t:"commonjs"}const m=process.env.TSX_TSCONFIG_PATH?{path:h.resolve(process.env.TSX_TSCONFIG_PATH),config:p.parseTsconfig(process.env.TSX_TSCONFIG_PATH)}:p.getTsconfig(),D=m&&p.createFilesMatcher(m),S=m&&p.createPathsMatcher(m),U="file://",y=/\.([cm]?ts|[tj]sx)($|\?)/,I=/\.json(?:$|\?)/,J=e=>{const t=h.extname(e);if(t===".json")return"json";if(t===".mjs"||t===".mts")return"module";if(t===".cjs"||t===".cts")return"commonjs"},C=e=>{const t=J(e);if(t)return t;if(y.test(e))return A(e)},q=v.installSourceMapSupport(),M=/\/(?:$|\?)/;let l=process.send?process.send.bind(process):void 0;const W=async e=>{if(!e)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0`);const{port:t}=e;l=t.postMessage.bind(t)},G=({port:e})=>(l=e.postMessage.bind(e),`
	const require = getBuiltin('module').createRequire("${typeof document>"u"?require("url").pathToFileURL(__filename).href:d&&d.src||new URL("esm/index.cjs",document.baseURI).href}");
	require('tsx/source-map').installSourceMapSupport(port);
	if (process.send) {
		port.addListener('message', (message) => {
			if (message.type === 'dependency') {
				process.send(message);
			}
		});
	}
	port.unref(); // Allows process to exit without waiting for port to close
	`),w=async(e,t,r)=>{const o=await e(t,r);return!o.format&&o.url.startsWith(U)&&(o.format=await C(o.url)),o},H=[".js",".json",".ts",".tsx",".jsx"];async function _(e,t,r){const[o,n]=e.split("?");let c;for(const a of H)try{return await w(r,o+a+(n?`?${n}`:""),t)}catch(s){if(c===void 0&&s instanceof Error){const{message:i}=s;s.message=s.message.replace(`${a}'`,"'"),s.stack=s.stack.replace(i,s.message),c=s}}throw c}async function j(e,t,r){const o=M.test(e),n=o?"index":"/index",[c,a]=e.split("?");try{return await _(c+n+(a?`?${a}`:""),t,r)}catch(s){if(!o)try{return await _(e,t,r)}catch{}const i=s,{message:u}=i;throw i.message=i.message.replace(`${n.replace("/",h.sep)}'`,"'"),i.stack=i.stack.replace(u,i.message),i}}const X=/^\.{1,2}\//,L=async function(e,t,r,o){var n;if(M.test(e))return await j(e,t,r);const c=e.startsWith(U)||X.test(e);if(S&&!c&&!((n=t.parentURL)!=null&&n.includes("/node_modules/"))){const a=S(e);for(const s of a)try{return await L(g.pathToFileURL(s).toString(),t,r)}catch{}}if(y.test(t.parentURL)){const a=O.resolveTsPath(e);if(a)for(const s of a)try{return await w(r,s,t)}catch(i){const{code:u}=i;if(u!=="ERR_MODULE_NOT_FOUND"&&u!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}}try{return await w(r,e,t)}catch(a){if(a instanceof Error&&!o){const{code:s}=a;if(s==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await j(e,t,r)}catch(i){if(i.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw i}if(s==="ERR_MODULE_NOT_FOUND")try{return await _(e,t,r)}catch{}}throw a}},P=R.importAttributes?"importAttributes":"importAssertions",$=async function(e,t,r){var o;l&&l({type:"dependency",path:e}),I.test(e)&&(t[P]||(t[P]={}),t[P].type="json");const n=await r(e,t);if(!n.source)return n;const c=e.startsWith("file://")?g.fileURLToPath(e):e,a=n.source.toString();if(n.format==="json"||y.test(e)){const s=await E.transform(a,c,{tsconfigRaw:(o=D)==null?void 0:o(c)});return{format:"module",source:q(s)}}if(n.format==="module"){const s=E.transformDynamicImport(c,a);s&&(n.source=q(s))}return n};R.supportsModuleRegister&&T.isMainThread&&b(),exports.globalPreload=G,exports.initialize=W,exports.load=$,exports.resolve=L;
